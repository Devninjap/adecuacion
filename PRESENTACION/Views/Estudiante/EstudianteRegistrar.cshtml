@model ENTIDADES.estudiante

@{
    ViewBag.Title = "Index";
}
<div class="contenedor">
    <h1>NUEVO ESTUDIANTE</h1>
    @using (Html.BeginForm("EstudianteNuevo", "Estudiante", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            

            <div class="columns">
                <div class="field column is-6">
                    @*@Html.LabelFor(model => model.apellidosEstudiante, htmlAttributes: new { @class = "label" })*@
                    <label class="label">APELLIDOS</label>
                    <div class="control">
                        @Html.EditorFor(model => model.apellidosEstudiante, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.apellidosEstudiante, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field column is-6">
                    @*@Html.LabelFor(model => model.nombresEstudiante, htmlAttributes: new { @class = "label" })*@
                    <label class="label">NOMBRES</label>
                    <div class="control">
                        @Html.EditorFor(model => model.nombresEstudiante, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.nombresEstudiante, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="columns">
                <div class="field column is-2">
                    @*@Html.LabelFor(model => model.codEstudiante, htmlAttributes: new { @class = "label" })*@
                    <label class="label">CODIGO</label>
                    <div class="control">
                        @Html.EditorFor(model => model.codEstudiante, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.codEstudiante, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="field column is-5">
                    @*@Html.LabelFor(model => model.sede, htmlAttributes: new { @class = "label" })*@
                    <label class="label">SEDE</label>
                    <div class="control">
                        @Html.EditorFor(model => model.sede, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.sede, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="field column is-5">
                    @*@Html.LabelFor(model => model.modalidad, htmlAttributes: new { @class = "label" })*@
                    <label class="label">MODALIDAD</label>
                    <div class="control">
                        @Html.EditorFor(model => model.modalidad, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.modalidad, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="columns">
                <div class="field column is-8">
                    @*@Html.LabelFor(model => model.carrera, htmlAttributes: new { @class = "label" })*@
                    <label class="label">CARRERA</label>
                    <div class="control">
                        @Html.EditorFor(model => model.carrera, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.carrera, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
            </div>
         
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Registrar" class="btn btn-default button is-success is-outlined"/>
                    @Html.ActionLink("Retornar", "EstudianteListar",null,new { @class="button is-danger is-outlined"})
                </div>
            </div>
        </div>
    }
    <br />
        
</div>
